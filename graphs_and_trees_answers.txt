1) What is a binary tree and what makes it unique to other trees?

2) What is a heuristic?

3) What is another problem besides the shortest-path problem that requires the use of heuristics?

4) What is the difference between a depth-first search and a breadth-first search?

5) Explain in your own words what an undirected, a-cyclic, unweighted graph is.

6) What kind of graph is a binary search tree?

//////////////////////////
1)

function Node(val){
 this.value = val;
 this.left = null;
 this.right = null;
}

function searchBinary(rootNode, val) {
    if (rootNode.key === null)
        return null;

    let nodeKey = parseInt(rootNode.val);

    if (val < nodeKey) {
        return searchBinary(rootNode.left, val);
    } else if (val > nodeKey) {
        return searchBinary(rootNode.right, val);
    } else {
        return rootNode.value;
    }
};


//////////////////////////

2)

class Node {
	constructor(data) {
		this.data = data;
		this.left = null;
		this.right = null;
	}
}

class BinarySearchTree {
	constructor() {
		this.root = null;
	}
